BOTTOM	client.c	/^#define BOTTOM(cc)	(cc->geom.y + cc->geom.height +/
LEFT	client.c	/^#define LEFT(cc)	(cc->geom.x)$/
Mcalmwm	calmwm.c	/^main(int argc, char **argv)$/
RIGHT	client.c	/^#define RIGHT(cc)	(cc->geom.x + cc->geom.width + 2/
TAILQ_HEAD	parse.c	/^TAILQ_HEAD(files, file)		 files = TAILQ_HEAD_INITI/
TOP	client.c	/^#define TOP(cc)		(cc->geom.y)$/
YYRECOVERING	parse.c	/^#define YYRECOVERING() (yyerrflag!=0)$/
YYSTYPE	parse.c	/^} YYSTYPE;$/
allowed_in_string	parse.c	/^#define allowed_in_string(x) \\$/
allowed_to_end_number	parse.c	/^#define allowed_to_end_number(x) \\$/
client_applysizehints	client.c	/^client_applysizehints(struct client_ctx *cc)$/
client_client_maybe_align	client.c	/^client_client_maybe_align(struct client_ctx *to, s/
client_current	client.c	/^client_current(void)$/
client_cycle	client.c	/^client_cycle(struct screen_ctx *sc, int reverse)$/
client_delete	client.c	/^client_delete(struct client_ctx *cc)$/
client_draw_border	client.c	/^client_draw_border(struct client_ctx *cc)$/
client_find	client.c	/^client_find(Window win)$/
client_freehints	client.c	/^client_freehints(struct client_ctx *cc)$/
client_freeze	client.c	/^client_freeze(struct client_ctx *cc)$/
client_gethints	client.c	/^client_gethints(struct client_ctx *cc)$/
client_getsizehints	client.c	/^client_getsizehints(struct client_ctx *cc)$/
client_hide	client.c	/^client_hide(struct client_ctx *cc)$/
client_horizmaximize	client.c	/^client_horizmaximize(struct client_ctx *cc)$/
client_inbound	client.c	/^client_inbound(struct client_ctx *cc, int x, int y/
client_leave	client.c	/^client_leave(struct client_ctx *cc)$/
client_lower	client.c	/^client_lower(struct client_ctx *cc)$/
client_maximize	client.c	/^client_maximize(struct client_ctx *cc)$/
client_maybe_align	client.c	/^client_maybe_align(struct client_ctx *cc, int move/
client_move	client.c	/^client_move(struct client_ctx *cc)$/
client_mrunext	client.c	/^client_mrunext(struct client_ctx *cc)$/
client_mruprev	client.c	/^client_mruprev(struct client_ctx *cc)$/
client_mtf	client.c	/^client_mtf(struct client_ctx *cc)$/
client_new	client.c	/^client_new(Window win, struct screen_ctx *sc, int /
client_none	client.c	/^client_none(struct screen_ctx *sc)$/
client_placecalc	client.c	/^client_placecalc(struct client_ctx *cc)$/
client_ptrsave	client.c	/^client_ptrsave(struct client_ctx *cc)$/
client_ptrwarp	client.c	/^client_ptrwarp(struct client_ctx *cc)$/
client_raise	client.c	/^client_raise(struct client_ctx *cc)$/
client_resize	client.c	/^client_resize(struct client_ctx *cc)$/
client_send_delete	client.c	/^client_send_delete(struct client_ctx *cc)$/
client_setactive	client.c	/^client_setactive(struct client_ctx *cc, int fg)$/
client_setname	client.c	/^client_setname(struct client_ctx *cc)$/
client_snapcalc	client.c	/^client_snapcalc(int n, int dn, int nmax, int bwidt/
client_unhide	client.c	/^client_unhide(struct client_ctx *cc)$/
client_update	client.c	/^client_update(struct client_ctx *cc)$/
client_vertmaximize	client.c	/^client_vertmaximize(struct client_ctx *cc)$/
conf_bindname	conf.c	/^conf_bindname(struct conf *c, char *name, char *bi/
conf_clear	conf.c	/^conf_clear(struct conf *c)$/
conf_client	conf.c	/^conf_client(struct client_ctx *cc)$/
conf_cmd_add	conf.c	/^conf_cmd_add(struct conf *c, char *image, char *la/
conf_color	conf.c	/^conf_color(struct conf *c, struct screen_ctx *sc)$/
conf_font	conf.c	/^conf_font(struct conf *c, struct screen_ctx *sc)$/
conf_gap	conf.c	/^conf_gap(struct conf *c, struct screen_ctx *sc)$/
conf_grab	conf.c	/^conf_grab(struct conf *c, struct keybinding *kb)$/
conf_grab_mouse	conf.c	/^conf_grab_mouse(struct client_ctx *cc)$/
conf_init	conf.c	/^conf_init(struct conf *c)$/
conf_mousebind	conf.c	/^conf_mousebind(struct conf *c, char *name, char *b/
conf_mouseunbind	conf.c	/^conf_mouseunbind(struct conf *c, struct mousebindi/
conf_reload	conf.c	/^conf_reload(struct conf *c)$/
conf_setup	conf.c	/^conf_setup(struct conf *c, const char *conf_file)$/
conf_unbind	conf.c	/^conf_unbind(struct conf *c, struct keybinding *unb/
conf_ungrab	conf.c	/^conf_ungrab(struct conf *c, struct keybinding *kb)/
ctltype	menu.c	/^enum ctltype {$/
dpy_init	calmwm.c	/^dpy_init(const char *dpyname)$/
errval	strtonum.c	/^	struct errval {$/
fgetln	fgetln.c	/^fgetln(FILE *stream, size_t *len)$/
findeol	parse.c	/^findeol(void)$/
font_ascent	font.c	/^font_ascent(struct screen_ctx *sc)$/
font_descent	font.c	/^font_descent(struct screen_ctx *sc)$/
font_draw	font.c	/^font_draw(struct screen_ctx *sc, const char *text,/
font_height	font.c	/^font_height(struct screen_ctx *sc)$/
font_init	font.c	/^font_init(struct screen_ctx *sc)$/
font_make	font.c	/^font_make(struct screen_ctx *sc, const char *name)/
font_width	font.c	/^font_width(struct screen_ctx *sc, const char *text/
group_add	group.c	/^group_add(struct group_ctx *gc, struct client_ctx /
group_alltoggle	group.c	/^group_alltoggle(struct screen_ctx *sc)$/
group_autogroup	group.c	/^group_autogroup(struct client_ctx *cc)$/
group_client_delete	group.c	/^group_client_delete(struct client_ctx *cc)$/
group_cycle	group.c	/^group_cycle(struct screen_ctx *sc, int reverse)$/
group_fix_hidden_state	group.c	/^group_fix_hidden_state(struct group_ctx *gc)$/
group_hide	group.c	/^group_hide(struct screen_ctx *sc, struct group_ctx/
group_hidetoggle	group.c	/^group_hidetoggle(struct screen_ctx *sc, int idx)$/
group_init	group.c	/^group_init(struct screen_ctx *sc)$/
group_make_autogroup	group.c	/^group_make_autogroup(struct conf *conf, char *val,/
group_menu	group.c	/^group_menu(XButtonEvent *e)$/
group_movetogroup	group.c	/^group_movetogroup(struct client_ctx *cc, int idx)$/
group_only	group.c	/^group_only(struct screen_ctx *sc, int idx)$/
group_remove	group.c	/^group_remove(struct client_ctx *cc)$/
group_set_names	group.c	/^group_set_names(struct screen_ctx *sc)$/
group_setactive	group.c	/^group_setactive(struct screen_ctx *sc, long idx)$/
group_show	group.c	/^group_show(struct screen_ctx *sc, struct group_ctx/
group_sticky_toggle_enter	group.c	/^group_sticky_toggle_enter(struct client_ctx *cc)$/
group_sticky_toggle_exit	group.c	/^group_sticky_toggle_exit(struct client_ctx *cc)$/
group_update_names	group.c	/^group_update_names(struct screen_ctx *sc)$/
kbfunc_client_cycle	kbfunc.c	/^kbfunc_client_cycle(struct client_ctx *cc, union a/
kbfunc_client_cyclegroup	kbfunc.c	/^kbfunc_client_cyclegroup(struct client_ctx *cc, un/
kbfunc_client_delete	kbfunc.c	/^kbfunc_client_delete(struct client_ctx *cc, union /
kbfunc_client_freeze	kbfunc.c	/^kbfunc_client_freeze(struct client_ctx *cc, union /
kbfunc_client_group	kbfunc.c	/^kbfunc_client_group(struct client_ctx *cc, union a/
kbfunc_client_grouponly	kbfunc.c	/^kbfunc_client_grouponly(struct client_ctx *cc, uni/
kbfunc_client_grouptoggle	kbfunc.c	/^kbfunc_client_grouptoggle(struct client_ctx *cc, u/
kbfunc_client_hide	kbfunc.c	/^kbfunc_client_hide(struct client_ctx *cc, union ar/
kbfunc_client_hmaximize	kbfunc.c	/^kbfunc_client_hmaximize(struct client_ctx *cc, uni/
kbfunc_client_label	kbfunc.c	/^kbfunc_client_label(struct client_ctx *cc, union a/
kbfunc_client_lower	kbfunc.c	/^kbfunc_client_lower(struct client_ctx *cc, union a/
kbfunc_client_maximize	kbfunc.c	/^kbfunc_client_maximize(struct client_ctx *cc, unio/
kbfunc_client_movetogroup	kbfunc.c	/^kbfunc_client_movetogroup(struct client_ctx *cc, u/
kbfunc_client_nogroup	kbfunc.c	/^kbfunc_client_nogroup(struct client_ctx *cc, union/
kbfunc_client_raise	kbfunc.c	/^kbfunc_client_raise(struct client_ctx *cc, union a/
kbfunc_client_search	kbfunc.c	/^kbfunc_client_search(struct client_ctx *cc, union /
kbfunc_client_vmaximize	kbfunc.c	/^kbfunc_client_vmaximize(struct client_ctx *cc, uni/
kbfunc_cmdexec	kbfunc.c	/^kbfunc_cmdexec(struct client_ctx *cc, union arg *a/
kbfunc_exec	kbfunc.c	/^kbfunc_exec(struct client_ctx *cc, union arg *arg)/
kbfunc_lock	kbfunc.c	/^kbfunc_lock(struct client_ctx *cc, union arg *arg)/
kbfunc_menu_search	kbfunc.c	/^kbfunc_menu_search(struct client_ctx *cc, union ar/
kbfunc_moveresize	kbfunc.c	/^kbfunc_moveresize(struct client_ctx *cc, union arg/
kbfunc_quit_wm	kbfunc.c	/^kbfunc_quit_wm(struct client_ctx *cc, union arg *a/
kbfunc_reload	kbfunc.c	/^kbfunc_reload(struct client_ctx *cc, union arg *ar/
kbfunc_ssh	kbfunc.c	/^kbfunc_ssh(struct client_ctx *cc, union arg *arg)$/
kbfunc_term	kbfunc.c	/^kbfunc_term(struct client_ctx *cc, union arg *arg)/
keywords	parse.c	/^struct keywords {$/
kw_cmp	parse.c	/^kw_cmp(const void *k, const void *e)$/
lgetc	parse.c	/^lgetc(int quotec)$/
lookup	parse.c	/^lookup(char *s)$/
lungetc	parse.c	/^lungetc(int c)$/
menu_calc_entry	menu.c	/^menu_calc_entry(struct screen_ctx *sc, struct menu/
menu_ctx	menu.c	/^struct menu_ctx {$/
menu_draw	menu.c	/^menu_draw(struct screen_ctx *sc, struct menu_ctx */
menu_filter	menu.c	/^menu_filter(struct screen_ctx *sc, struct menu_q */
menu_handle_key	menu.c	/^menu_handle_key(XEvent *e, struct menu_ctx *mc, st/
menu_handle_move	menu.c	/^menu_handle_move(XEvent *e, struct menu_ctx *mc, s/
menu_handle_release	menu.c	/^menu_handle_release(XEvent *e, struct menu_ctx *mc/
menu_init	menu.c	/^menu_init(struct screen_ctx *sc)$/
menu_keycode	menu.c	/^menu_keycode(KeyCode kc, u_int state, enum ctltype/
mousefunc_menu_cmd	mousefunc.c	/^mousefunc_menu_cmd(struct client_ctx *cc, void *ar/
mousefunc_menu_group	mousefunc.c	/^mousefunc_menu_group(struct client_ctx *cc, void */
mousefunc_menu_unhide	mousefunc.c	/^mousefunc_menu_unhide(struct client_ctx *cc, void /
mousefunc_sweep_calc	mousefunc.c	/^mousefunc_sweep_calc(struct client_ctx *cc, int x,/
mousefunc_sweep_draw	mousefunc.c	/^mousefunc_sweep_draw(struct client_ctx *cc)$/
mousefunc_window_grouptoggle	mousefunc.c	/^mousefunc_window_grouptoggle(struct client_ctx *cc/
mousefunc_window_hide	mousefunc.c	/^mousefunc_window_hide(struct client_ctx *cc, void /
mousefunc_window_lower	mousefunc.c	/^mousefunc_window_lower(struct client_ctx *cc, void/
mousefunc_window_move	mousefunc.c	/^mousefunc_window_move(struct client_ctx *cc, void /
mousefunc_window_raise	mousefunc.c	/^mousefunc_window_raise(struct client_ctx *cc, void/
mousefunc_window_resize	mousefunc.c	/^mousefunc_window_resize(struct client_ctx *cc, voi/
open_logfile	log.c	/^open_logfile(void)$/
parse_config	parse.c	/^parse_config(const char *filename, struct conf *xc/
popfile	parse.c	/^popfile(void)$/
pushfile	parse.c	/^pushfile(const char *name)$/
screen_find_xinerama	screen.c	/^screen_find_xinerama(struct screen_ctx *sc, int x,/
screen_fromroot	screen.c	/^screen_fromroot(Window rootwin)$/
screen_init_xinerama	screen.c	/^screen_init_xinerama(struct screen_ctx *sc)$/
screen_update_geometry	screen.c	/^screen_update_geometry(struct screen_ctx *sc, int /
screen_updatestackingorder	screen.c	/^screen_updatestackingorder(struct screen_ctx *sc)$/
search_match_client	search.c	/^search_match_client(struct menu_q *menuq, struct m/
search_match_exec	search.c	/^search_match_exec(struct menu_q *menuq, struct men/
search_match_text	search.c	/^search_match_text(struct menu_q *menuq, struct men/
search_print_client	search.c	/^search_print_client(struct menu *mi, int list)$/
sigchld_cb	calmwm.c	/^sigchld_cb(int which)$/
strlcat	strlcat.c	/^strlcat(char *dst, const char *src, size_t siz)$/
strlcpy	strlcpy.c	/^strlcpy(char *dst, const char *src, size_t siz)$/
strsubmatch	search.c	/^strsubmatch(char *sub, char *str, int zeroidx)$/
strtonum	strtonum.c	/^strtonum(const char *numstr, long long minval, lon/
timespeccmp	conf.c	/^#define timespeccmp(tsp, usp, cmp)			\\$/
u_exec	util.c	/^u_exec(char *argstr)$/
u_spawn	util.c	/^u_spawn(char *argstr)$/
usage	calmwm.c	/^usage(void)$/
write_log	log.c	/^write_log(const char *fmt, ...)$/
x_errorhandler	calmwm.c	/^x_errorhandler(Display *dpy, XErrorEvent *e)$/
x_setup	calmwm.c	/^x_setup(void)$/
x_setupscreen	calmwm.c	/^x_setupscreen(struct screen_ctx *sc, u_int which)$/
x_teardown	calmwm.c	/^x_teardown(void)$/
x_wmerrorhandler	calmwm.c	/^x_wmerrorhandler(Display *dpy, XErrorEvent *e)$/
xcalloc	xmalloc.c	/^xcalloc(size_t no, size_t siz)$/
xev_handle_buttonpress	xevents.c	/^xev_handle_buttonpress(XEvent *ee)$/
xev_handle_buttonrelease	xevents.c	/^xev_handle_buttonrelease(XEvent *ee)$/
xev_handle_clientmessage	xevents.c	/^xev_handle_clientmessage(XEvent *ee)$/
xev_handle_configurerequest	xevents.c	/^xev_handle_configurerequest(XEvent *ee)$/
xev_handle_destroynotify	xevents.c	/^xev_handle_destroynotify(XEvent *ee)$/
xev_handle_enternotify	xevents.c	/^xev_handle_enternotify(XEvent *ee)$/
xev_handle_expose	xevents.c	/^xev_handle_expose(XEvent *ee)$/
xev_handle_keypress	xevents.c	/^xev_handle_keypress(XEvent *ee)$/
xev_handle_keyrelease	xevents.c	/^xev_handle_keyrelease(XEvent *ee)$/
xev_handle_leavenotify	xevents.c	/^xev_handle_leavenotify(XEvent *ee)$/
xev_handle_mappingnotify	xevents.c	/^xev_handle_mappingnotify(XEvent *ee)$/
xev_handle_maprequest	xevents.c	/^xev_handle_maprequest(XEvent *ee)$/
xev_handle_propertynotify	xevents.c	/^xev_handle_propertynotify(XEvent *ee)$/
xev_handle_randr	xevents.c	/^xev_handle_randr(XEvent *ee)$/
xev_handle_unmapnotify	xevents.c	/^xev_handle_unmapnotify(XEvent *ee)$/
xev_loop	xevents.c	/^xev_loop(void)$/
xfree	xmalloc.c	/^xfree(void *p)$/
xmalloc	xmalloc.c	/^xmalloc(size_t siz)$/
xstrdup	xmalloc.c	/^xstrdup(const char *str)$/
xu_btn_grab	xutil.c	/^xu_btn_grab(Window win, int mask, u_int btn)$/
xu_btn_ungrab	xutil.c	/^xu_btn_ungrab(Window win, int mask, u_int btn)$/
xu_configure	xutil.c	/^xu_configure(struct client_ctx *cc)$/
xu_freecolor	xutil.c	/^xu_freecolor(struct screen_ctx *sc, unsigned long /
xu_getatoms	xutil.c	/^xu_getatoms(void)$/
xu_getcolor	xutil.c	/^xu_getcolor(struct screen_ctx *sc, char *name)$/
xu_getprop	xutil.c	/^xu_getprop(Window win, Atom atm, Atom type, long l/
xu_getstate	xutil.c	/^xu_getstate(struct client_ctx *cc, int *state)$/
xu_getstrprop	xutil.c	/^xu_getstrprop(Window win, Atom atm, char **text) {/
xu_key_grab	xutil.c	/^xu_key_grab(Window win, int mask, int keysym)$/
xu_key_ungrab	xutil.c	/^xu_key_ungrab(Window win, int mask, int keysym)$/
xu_ptr_getpos	xutil.c	/^xu_ptr_getpos(Window rootwin, int *x, int *y)$/
xu_ptr_grab	xutil.c	/^xu_ptr_grab(Window win, int mask, Cursor curs)$/
xu_ptr_regrab	xutil.c	/^xu_ptr_regrab(int mask, Cursor curs)$/
xu_ptr_setpos	xutil.c	/^xu_ptr_setpos(Window win, int x, int y)$/
xu_ptr_ungrab	xutil.c	/^xu_ptr_ungrab(void)$/
xu_sendmsg	xutil.c	/^xu_sendmsg(Window win, Atom atm, long val)$/
xu_setstate	xutil.c	/^xu_setstate(struct client_ctx *cc, int state)$/
xu_setwmname	xutil.c	/^xu_setwmname(struct screen_ctx *sc)$/
yyerror	parse.c	/^yyerror(const char *fmt, ...)$/
yylex	parse.c	/^yylex(void)$/
